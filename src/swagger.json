{
    "swagger": "2.0",
    "info": {
        "description": "Node JS Express powered API for Kanban",
        "version": "1.0.0",
        "title": "Kanban"
    },
    "schemes": [
        "http"
    ],
    "host": "localhost:3001",
    "basePath": "/",
    "tags": [
        {
            "name": "health"
        },
        {
            "name": "user"
        }
    ],
    "paths": {
        "/health/ping": {
            "get": {
                "tags": [
                    "health"
                ],
                "summary": "Mock endpoint to test API response",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "ok"
                    }
                }
            }
        },
        "/user/sign-up": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Endpoint to regiser a user",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "400": {
                        "description": "Error message"
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Request Object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ]
            }
        },
        "/user/sign-in": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Endpoint to sign-in a user",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "400": {
                        "description": "Error message"
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Request Object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserValidation"
                        }
                    }
                ]
            }
        },
        "/user/sign-out": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Endpoint to sign-out a user",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "400": {
                        "description": "Error message"
                    }
                },
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Request Object",
                        "required": true
                    }
                ]
            }
        }
    },
    "definitions": {
        "User": {
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "UserValidation": {
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "Header": {
            "properties": {
                "authorization": {
                    "type": "string"
                }
            }
        }
    }
}